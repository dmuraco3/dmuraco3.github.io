{"version":3,"sources":["laptopBackground.jpg","components/projects/index.js","components/about/index.js","components/contact/index.js","components/Error404/index.js","App.js","reportWebVitals.js","index.js"],"names":["Projects","className","title","description","codeLink","displayLink","map","project","index","Card","style","width","Img","variant","src","Placeholder","Body","Title","Text","Button","target","href","margin","About","Contact","useState","Email","setEmail","FirstName","setFirstName","LastName","setLastName","message","setMessage","formRef","useRef","successShow","setShowSucces","setErrorShow","textAlign","Alert","dismissible","onClose","Heading","Form","ref","onSubmit","event","preventDefault","stopPropagation","currentTarget","checkValidity","opts","email","fname","lname","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","DONE","status","console","log","current","reset","send","JSON","stringify","Group","Label","Control","onChange","e","value","required","type","placeholder","Row","Col","controlId","as","rows","size","block","NotFound","to","App","Active","setActive","Hovered","setHovered","ActiveHovered","ElementName","deActiveHovered","basename","process","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","inline","Link","onClick","onMouseEnter","onMouseLeave","color","exact","path","Home","component","portfolio","scrollIntoView","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.207b2c79.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/laptopBackground.0fa7d462.jpg\";","import React from 'react';\nimport {Card, Button} from 'react-bootstrap';\nimport Placeholder from '../../laptopBackground.jpg'\n\nexport default function Projects() {\n    const projects = [\n        {\n            title: \"test\",\n            description: \"this is a test\",\n            codeLink: \"https://google.com\",\n            displayLink: \"\"\n        },\n        {\n            title: \"test2\",\n            description: \"this is a test2\",\n            codeLink: \"\",\n            displayLink: \"\"\n        }\n    ]\n    return (\n        <main>\n            <div className=\"ProjectsFlex\">\n                {projects.map((project, index) => (\n                    <Card style={{width: '18rem'}} className=\"text-center\">\n                        <Card.Img variant=\"top\"  src={Placeholder}/>\n                        <Card.Body>\n                            <Card.Title>{project.title}</Card.Title>\n                            <Card.Text>\n                                {project.description}\n                            </Card.Text>\n                            <Button target=\"_blank\" href={project.codeLink} variant=\"primary\"   style={{margin: 10}}>Code</Button>\n                            <Button target=\"_blank\" href={project.displayLink} variant=\"secondary\" style={{margin: 10}}>View</Button>\n                        </Card.Body>\n                    </Card>\n                ))}\n            </div>\n            \n        </main>\n    )\n}","export default function About() {\n    return (\n        <div>\n            <p>\n                Hello my name is Dylan Muraco, I'm a 17 year old programmer from New York.\n\n            </p>\n        </div>\n    )\n}","import {Form, Row, Col, Button, Alert} from 'react-bootstrap'\nimport {useState, useRef} from 'react'\n\nexport default function Contact() {\n    const [Email, setEmail] = useState('')\n    const [FirstName, setFirstName] = useState('')\n    const [LastName, setLastName] = useState('')\n    const [message, setMessage] = useState('')\n    const formRef = useRef(null)\n\n    const [successShow, setShowSucces] = useState(false)\n    const [errorShow, setErrorShow] = useState(false)\n\n    const handleEmailChange = (e) => {\n        setEmail(e.target.value)\n    }\n    const handleFirstNameChange = (e) => {\n        setFirstName(e.target.value)\n    }\n    const handleLastNameChange = (e) => {\n        setLastName(e.target.value)\n    }\n    const handleMessageChange = (e) => {\n        setMessage(e.target.value)\n    }\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        event.stopPropagation()\n        \n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.preventDefault()\n            event.stopPropagation()\n        }else {\n            event.preventDefault()\n            event.stopPropagation()\n            let opts = {\n                email: Email,\n                fname: FirstName,\n                lname: LastName,\n                message: message,\n            }\n\n            const xhr = new XMLHttpRequest();\n            xhr.open('POST', 'https://formspree.io/f/xoqpodbv');\n            xhr.setRequestHeader(\"Accept\", \"application/json\");\n            xhr.onreadystatechange = () => {\n              if (xhr.readyState !== XMLHttpRequest.DONE) return;\n              if (xhr.status === 200) {\n                console.log({ status: \"SUCCESS\" });\n                formRef.current.reset();\n                setShowSucces(true)\n\n              } else {\n                console.log({ status: \"ERROR\" });\n                setErrorShow(true)\n              }\n            };\n            xhr.send(JSON.stringify(opts) );\n        }\n    }\n    return (\n        <div>\n            <h1 style={{textAlign: 'center'}}>Please fill out this form to contact me</h1>\n            {successShow ?\n                <Alert variant=\"success\" dismissible onClose={() => {\n                    setShowSucces(false)\n                }}>\n                    <Alert.Heading>Thanks for Contacting Me</Alert.Heading>\n                    <p>I will respond to you as soon as possible</p>\n                </Alert>\n                :\n                <>\n                </>\n            }\n            <div className=\"ContactFormHolder\">\n                <Form ref={formRef} className=\"ContactForm\" onSubmit={handleSubmit}>\n\n                    <Form.Group>\n                        <Form.Label>Email Address</Form.Label>\n                        <Form.Control onChange={handleEmailChange} required type=\"email\" placeholder=\"name@example.com\" />\n                    </Form.Group>\n                    <Row>\n                        <Col>\n                            <Form.Group>\n                                <Form.Label >First name</Form.Label>\n                                <Form.Control onChange={handleFirstNameChange} required type=\"text\" placeholder=\"John\"/>\n                            </Form.Group>\n                        </Col>\n                        <Col>\n                            <Form.Group>\n                                <Form.Label>Last name</Form.Label>\n                                <Form.Control onChange={handleLastNameChange} required type=\"text\" placeholder=\"John\"/>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label>Message</Form.Label>\n                        <Form.Control onChange={handleMessageChange} required as=\"textarea\" rows={3} />\n                    </Form.Group>\n                    <Button type=\"submit\" variant=\"success\" size=\"lg\" block>\n                        Send Message\n                    </Button>\n                </Form>\n            </div>\n        </div>\n    )\n}","import {Link} from 'react-router-dom';\nexport default function NotFound() {\n    return (\n        <div>\n            <h1\n                style={{textAlign: \"center\"}}\n            >\n                It looks like your are lost \n            </h1>\n            <h1 \n                style={{textAlign: \"center\"}}\n            >\n                <Link to=\"/home\" >Return Home</Link>\n            </h1>\n        </div>\n    );\n};","import {useState} from 'react'\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport {FaChevronDown as Down} from 'react-icons/fa'\nimport Typist from 'react-typist'\nimport { useRef } from \"react\";\nimport Projects from './components/projects/index.js'\nimport About from './components/about/index.js'\nimport Contact from './components/contact/index.js'\nimport NotFound from './components/Error404/index.js'\n\n\nexport default function App() {\n  const [Active, setActive] = useState(\"HOME\")\n  const [Hovered, setHovered] = useState(null)\n\n  function ActiveHovered(ElementName) {\n    if(Active !== ElementName){\n      setHovered(ElementName)\n    }\n  }\n  const deActiveHovered = () => {\n    setHovered(null)\n  }\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL} >\n        <Navbar bg=\"dark\" expand=\"md\" variant=\"dark\">\n          <Navbar.Brand href=\"#home\" className=\"Logo\">Dylan Muraco</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"mr-auto\">\n              </Nav>\n              <Nav inline>\n                <Nav.Link>\n                  <Link \n                    to=\"/home\" \n                    className=\"link\"\n                    onClick={() => {\n                      setActive(\"HOME\")\n                    }}\n                    onMouseEnter={() => {ActiveHovered(\"HOME\")}}\n                    onMouseLeave={() => {deActiveHovered()}}\n                    style={Active===\"HOME\" || Hovered===\"HOME\" ? {color:\"white\"}: {color: \"rgba(255,255,255,.5)\"}}\n                  >\n                    HOME\n                  </Link>\n                </Nav.Link>\n                <Nav.Link>\n                  <Link\n                    to=\"/projects\" \n                    className=\"link\"\n                    onClick={() => {\n                      setActive(\"PROJECTS\")\n                    }}\n                    onMouseEnter={() => {ActiveHovered(\"PROJECTS\")}}\n                    onMouseLeave={() => {deActiveHovered()}}\n                    style={Active===\"PROJECTS\" || Hovered===\"PROJECTS\" ? {color:\"white\"}: {color: \"rgba(255,255,255,.5)\"}}\n                  >\n                    PROJECTS\n                  </Link>\n                </Nav.Link>\n                <Nav.Link>\n                  <Link\n                    to=\"/about\"\n                    className=\"link\"\n                    onClick={() => {\n                      setActive(\"ABOUT\")\n                    }}\n                    onMouseEnter={() => {ActiveHovered(\"ABOUT\")}}\n                    onMouseLeave={() => {deActiveHovered()}}\n                    style={Active===\"ABOUT\" || Hovered===\"ABOUT\" ? {color:\"white\"}: {color: \"rgba(255,255,255,.5)\"}}\n                  >\n                  ABOUT\n                  </Link>\n                </Nav.Link>\n                <Nav.Link>\n                  <Link\n                    to=\"/contact\"\n                    className=\"link\"\n                    onClick={() => {\n                      setActive(\"CONTACT\")\n                    }}\n                    onMouseEnter={() => {ActiveHovered(\"CONTACT\")}}\n                    onMouseLeave={() => {deActiveHovered()}}\n                    style={Active===\"CONTACT\" || Hovered===\"CONTACT\" ? {color:\"white\"}: {color: \"rgba(255,255,255,.5)\"}}\n                  >\n                    CONTACT\n                  </Link>\n                </Nav.Link>\n              </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n\n        <Switch>\n\n\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/home\">\n            <Home />\n          </Route>\n\n          <Route exact path=\"/projects\">\n            <Projects />\n          </Route>\n\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n\n          <Route exact path=\"/contact\">\n            <Contact />\n          </Route>\n\n          <Route component={NotFound} /> \n\n        </Switch>\n\n      </Router>\n    </div>\n  );\n};\n\nfunction Home() {\n  const portfolio = useRef(null)\n\n  const executeScroll = () => {\n    portfolio.current.scrollIntoView()\n  }\n\n  return (\n    <div className=\"Main\">\n      <div className=\"backgrounds\">\n        <div className=\"Background1\"/>\n      </div>\n      <div className=\"focus\">\n        <span>I'm a </span>\n        <Typist >\n          <span>Full Stack Developer</span>\n        </Typist>\n\n        <h4>designing & building exceptional projects</h4>\n\n        <div className=\"go-to-portfolio\">\n          <div className=\"go-to-portfolio-flex\" onClick={executeScroll}>\n\n            <div className=\"go-to-one\" > \n              view portfolio\n            </div>\n\n            <div className=\"go-to-two\" >\n              <Down/>\n            </div>\n\n          </div>\n        </div>\n\n      </div>\n      <div ref={portfolio} className=\"portfolio\">\n        <h1>werin</h1>\n      </div>\n    </div>\n  )\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}